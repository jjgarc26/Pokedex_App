{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport PokemonList from \"../Components/PokemonList/PokemonList\"; // const PokemonAPI = (props) => {\n//   const [data, setData] = useState([]);\n//   useEffect(() => {\n//     getData();\n//   }, []);\n//   //fetch pokemon api\n//   const getData = async () => {\n//     try {\n//       let response = await fetch(\n//         `https://pokeapi.co/api/v2/pokemon?limit=${props.limit}`\n//       );\n//       let data = await response.json();\n//       //Parse over api url to get pokemon information\n//       const pokemonData = [];\n//       for (let i = 0; i < data.results.length; i++) {\n//         let res = await fetch(data.results[i].url);\n//         let secondData = await res.json();\n//         pokemonData.push(secondData);\n//       }\n//       setData(pokemonData);\n//     } catch {\n//       console.error(\"Api was not able to be found\");\n//     }\n//   };\n//   return (\n//     <React.Fragment>\n//       <PokemonList pokemonData={data} />\n//     </React.Fragment>\n//   );\n// };\n\nconst PokemonAPI = async limit => {\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=${limit}`);\n    const data = await response.json();\n    const pokemonData = [];\n\n    for (let i = 0; i < data.results.length; i++) {\n      let res = await fetch(data.results[i].url);\n      let secondData = await res.json();\n      pokemonData.push(secondData);\n    }\n\n    return pokemonData;\n  } catch {\n    console.error(\"Could not fetch api\");\n  }\n};\n\n_c = PokemonAPI;\nexport default PokemonAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonAPI\");","map":{"version":3,"sources":["C:/Users/mendo/OneDrive/Documents/Programming/ReactJS/Pokedex_App/project_folder/src/api/PokemonAPI.js"],"names":["React","useEffect","useState","PokemonList","PokemonAPI","limit","response","fetch","data","json","pokemonData","i","results","length","res","url","secondData","push","console","error"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uCAAxB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,2CAA0CF,KAAM,EADvB,CAA5B;AAGA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,OAAL,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,UAAIG,GAAG,GAAG,MAAMP,KAAK,CAACC,IAAI,CAACI,OAAL,CAAaD,CAAb,EAAgBI,GAAjB,CAArB;AACA,UAAIC,UAAU,GAAG,MAAMF,GAAG,CAACL,IAAJ,EAAvB;AACAC,MAAAA,WAAW,CAACO,IAAZ,CAAiBD,UAAjB;AACD;;AACD,WAAON,WAAP;AACD,GAZD,CAYE,MAAM;AACNQ,IAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd;AACD;AACF,CAhBD;;KAAMf,U;AAiBN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PokemonList from \"../Components/PokemonList/PokemonList\";\r\n\r\n// const PokemonAPI = (props) => {\r\n//   const [data, setData] = useState([]);\r\n//   useEffect(() => {\r\n//     getData();\r\n//   }, []);\r\n\r\n//   //fetch pokemon api\r\n//   const getData = async () => {\r\n//     try {\r\n//       let response = await fetch(\r\n//         `https://pokeapi.co/api/v2/pokemon?limit=${props.limit}`\r\n//       );\r\n//       let data = await response.json();\r\n\r\n//       //Parse over api url to get pokemon information\r\n//       const pokemonData = [];\r\n//       for (let i = 0; i < data.results.length; i++) {\r\n//         let res = await fetch(data.results[i].url);\r\n//         let secondData = await res.json();\r\n//         pokemonData.push(secondData);\r\n//       }\r\n//       setData(pokemonData);\r\n//     } catch {\r\n//       console.error(\"Api was not able to be found\");\r\n//     }\r\n//   };\r\n//   return (\r\n//     <React.Fragment>\r\n//       <PokemonList pokemonData={data} />\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\nconst PokemonAPI = async (limit) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://pokeapi.co/api/v2/pokemon?limit=${limit}`\r\n    );\r\n    const data = await response.json();\r\n    const pokemonData = [];\r\n    for (let i = 0; i < data.results.length; i++) {\r\n      let res = await fetch(data.results[i].url);\r\n      let secondData = await res.json();\r\n      pokemonData.push(secondData);\r\n    }\r\n    return pokemonData;\r\n  } catch {\r\n    console.error(\"Could not fetch api\");\r\n  }\r\n};\r\nexport default PokemonAPI;\r\n"]},"metadata":{},"sourceType":"module"}