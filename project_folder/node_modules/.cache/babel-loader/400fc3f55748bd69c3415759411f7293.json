{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mendo\\\\OneDrive\\\\Documents\\\\Programming\\\\ReactJS\\\\Pokedex_App\\\\project_folder\\\\src\\\\Components\\\\PokemonFullStats\\\\Stats\\\\PokemonSummary\\\\PokemonSummary.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonSummary = props => {\n  _s();\n\n  const [summary, setSummary] = useState(\"\");\n  useEffect(() => {\n    readApi();\n  }, []);\n\n  const readApi = async () => {\n    try {\n      let speciesData = await props.summary;\n      let summarytest = speciesData.flavor_text_entries[0].flavor_text;\n      setSummary(summarytest.replace(/(\\r\\n|\\n|\\r)/gm, \" \"));\n      console.log(summarytest);\n    } catch {\n      console.error(\"Could not read summary\");\n    }\n  }; //readApi();\n\n\n  console.log(props.summary);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary = undefined ? \"Loading...\" : summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonSummary, \"nPUBso0gEwU0lUlfUJ2F3Iyrkt8=\");\n\n_c = PokemonSummary;\nexport default PokemonSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonSummary\");","map":{"version":3,"sources":["C:/Users/mendo/OneDrive/Documents/Programming/ReactJS/Pokedex_App/project_folder/src/Components/PokemonFullStats/Stats/PokemonSummary/PokemonSummary.jsx"],"names":["React","useState","useEffect","PokemonSummary","props","summary","setSummary","readApi","speciesData","summarytest","flavor_text_entries","flavor_text","replace","console","log","error","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,UAAIC,WAAW,GAAG,MAAMJ,KAAK,CAACC,OAA9B;AACA,UAAII,WAAW,GAAGD,WAAW,CAACE,mBAAZ,CAAgC,CAAhC,EAAmCC,WAArD;AAEAL,MAAAA,UAAU,CAACG,WAAW,CAACG,OAAZ,CAAoB,gBAApB,EAAsC,GAAtC,CAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACD,KAND,CAME,MAAM;AACNI,MAAAA,OAAO,CAACE,KAAR,CAAc,wBAAd;AACD;AACF,GAVD,CANgC,CAiBhC;;;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACC,OAAlB;AACA,sBACE;AAAA,2BACE;AAAA,gBAAKA,OAAO,GAAGW,SAAS,GAAG,YAAH,GAAkBX;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMF,c;;KAAAA,c;AA0BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst PokemonSummary = (props) => {\r\n  const [summary, setSummary] = useState(\"\");\r\n  useEffect(() => {\r\n    readApi();\r\n  }, []);\r\n\r\n  const readApi = async () => {\r\n    try {\r\n      let speciesData = await props.summary;\r\n      let summarytest = speciesData.flavor_text_entries[0].flavor_text;\r\n\r\n      setSummary(summarytest.replace(/(\\r\\n|\\n|\\r)/gm, \" \"));\r\n      console.log(summarytest);\r\n    } catch {\r\n      console.error(\"Could not read summary\");\r\n    }\r\n  };\r\n  //readApi();\r\n\r\n  console.log(props.summary);\r\n  return (\r\n    <div>\r\n      <p>{(summary = undefined ? \"Loading...\" : summary)}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonSummary;\r\n"]},"metadata":{},"sourceType":"module"}