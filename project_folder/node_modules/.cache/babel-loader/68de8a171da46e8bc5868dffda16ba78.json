{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mendo\\\\OneDrive\\\\Documents\\\\Programming\\\\ReactJS\\\\Pokedex_App\\\\project_folder\\\\src\\\\Components\\\\PokemonList\\\\PokemonList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PokemonPreview from \"../PokemonPreview/PokemonPreview\";\nimport Card from \"../../UI/Card/Card\";\nimport styles from \"./PokemonList.module.css\";\nimport PokemonFilterList from \"./PokemonListFilter\";\nimport defaultPreview from \"../../DefaultValues/DefaultPreview\";\nimport { PokemonSpeciesApi } from \"../../api/PokemonSpeciesAPI\";\nimport PokemonFullStatus from \"../PokemonFullStats/PokemonFullStats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokemonList = props => {\n  _s();\n\n  const [previewData, setPreviewData] = useState(defaultPreview);\n  const [stats, setStats] = useState({});\n  const [speciesApi, setSpeciesApi] = useState({});\n  const [loadStats, setLoadStatus] = useState(false);\n  const [filterList, setFilterList] = useState([]);\n  useEffect(() => {\n    setFilterList(props.pokemonData);\n    setStats(props.pokemonData[0]);\n  }, [props]);\n\n  const previewHandler = data => {\n    setPreviewData({\n      id: data.id,\n      name: data.name,\n      image: data.sprites.other[\"official-artwork\"].front_default\n    });\n    setStats(data);\n  };\n\n  const filterListHandler = criteria => {\n    if (criteria !== \"\") {\n      const filterPokemonList = props.pokemonData.filter(pokemon => {\n        if (pokemon.name.includes(criteria)) {\n          return pokemon;\n        }\n      });\n      setFilterList(filterPokemonList);\n    } else {\n      return setFilterList(props.pokemonData);\n    }\n  };\n\n  const pokemonList = filterList.map(pokemon => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: styles.items,\n      onClick: () => previewHandler(pokemon),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.liId,\n        children: pokemon.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.liName,\n        children: pokemon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemon.sprites.front_default,\n          alt: \"pokemon sprite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, pokemon.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  });\n\n  const sideList = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.listContainer,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.listUls,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.liContainer,\n          children: pokemonList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  };\n\n  const loadFullStatsHandler = async () => {\n    try {\n      let data = await PokemonSpeciesApi(previewData.id);\n      console.log(data);\n      setSpeciesApi(data);\n      setLoadStatus(true);\n    } catch {\n      console.error(\"Could not fetch API\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(PokemonFilterList, {\n      filterCriteria: filterListHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.previewContainer,\n      children: [/*#__PURE__*/_jsxDEV(PokemonPreview, {\n        previewInfo: previewData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => loadFullStatsHandler(),\n        children: \"Load Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), loadStats ? /*#__PURE__*/_jsxDEV(PokemonFullStatus, {\n      basicApi: stats,\n      speciesApi: speciesApi\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : sideList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PokemonList, \"vrEDS8rrdEvplwh4xc85xW6LKtc=\");\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["C:/Users/mendo/OneDrive/Documents/Programming/ReactJS/Pokedex_App/project_folder/src/Components/PokemonList/PokemonList.jsx"],"names":["React","useEffect","useState","PokemonPreview","Card","styles","PokemonFilterList","defaultPreview","PokemonSpeciesApi","PokemonFullStatus","PokemonList","props","previewData","setPreviewData","stats","setStats","speciesApi","setSpeciesApi","loadStats","setLoadStatus","filterList","setFilterList","pokemonData","previewHandler","data","id","name","image","sprites","other","front_default","filterListHandler","criteria","filterPokemonList","filter","pokemon","includes","pokemonList","map","items","liId","liName","sideList","listContainer","listUls","liContainer","loadFullStatsHandler","console","log","error","previewContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PokemonPreview from \"../PokemonPreview/PokemonPreview\";\r\nimport Card from \"../../UI/Card/Card\";\r\nimport styles from \"./PokemonList.module.css\";\r\nimport PokemonFilterList from \"./PokemonListFilter\";\r\nimport defaultPreview from \"../../DefaultValues/DefaultPreview\";\r\nimport { PokemonSpeciesApi } from \"../../api/PokemonSpeciesAPI\";\r\nimport PokemonFullStatus from \"../PokemonFullStats/PokemonFullStats\";\r\n\r\nconst PokemonList = (props) => {\r\n  const [previewData, setPreviewData] = useState(defaultPreview);\r\n  const [stats, setStats] = useState({});\r\n  const [speciesApi, setSpeciesApi] = useState({});\r\n  const [loadStats, setLoadStatus] = useState(false);\r\n  const [filterList, setFilterList] = useState([]);\r\n  useEffect(() => {\r\n    setFilterList(props.pokemonData);\r\n    setStats(props.pokemonData[0]);\r\n  }, [props]);\r\n  const previewHandler = (data) => {\r\n    setPreviewData({\r\n      id: data.id,\r\n      name: data.name,\r\n      image: data.sprites.other[\"official-artwork\"].front_default,\r\n    });\r\n    setStats(data);\r\n  };\r\n  const filterListHandler = (criteria) => {\r\n    if (criteria !== \"\") {\r\n      const filterPokemonList = props.pokemonData.filter((pokemon) => {\r\n        if (pokemon.name.includes(criteria)) {\r\n          return pokemon;\r\n        }\r\n      });\r\n      setFilterList(filterPokemonList);\r\n    } else {\r\n      return setFilterList(props.pokemonData);\r\n    }\r\n  };\r\n  const pokemonList = filterList.map((pokemon) => {\r\n    return (\r\n      <li\r\n        className={styles.items}\r\n        key={pokemon.id}\r\n        onClick={() => previewHandler(pokemon)}\r\n      >\r\n        <div className={styles.liId}>{pokemon.id}</div>\r\n        <div className={styles.liName}>{pokemon.name}</div>\r\n        <div>\r\n          <img src={pokemon.sprites.front_default} alt=\"pokemon sprite\" />\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const sideList = () => {\r\n    return (\r\n      <div className={styles.listContainer}>\r\n        <ul className={styles.listUls}>\r\n          <div className={styles.liContainer}>{pokemonList}</div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n  const loadFullStatsHandler = async () => {\r\n    try {\r\n      let data = await PokemonSpeciesApi(previewData.id);\r\n      console.log(data);\r\n      setSpeciesApi(data);\r\n      setLoadStatus(true);\r\n    } catch {\r\n      console.error(\"Could not fetch API\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <PokemonFilterList filterCriteria={filterListHandler} />\r\n      <div className={styles.previewContainer}>\r\n        <PokemonPreview previewInfo={previewData} />\r\n        <button onClick={() => loadFullStatsHandler()}>Load Stats</button>\r\n      </div>\r\n      {loadStats ? (\r\n        <PokemonFullStatus basicApi={stats} speciesApi={speciesApi} />\r\n      ) : (\r\n        sideList()\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default PokemonList;\r\n"]},"metadata":{},"sourceType":"module"}