[{"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\01_React_project_template\\src\\index.js":"1","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\01_React_project_template\\src\\App.js":"2","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\index.js":"3","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\App.js":"4","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\api\\PokemonAPI.js":"5","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonList\\PokemonList.jsx":"6","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\UI\\Card\\Card.js":"7","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonList\\PokemonListFilter.jsx":"8","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonFullStats\\PokemonFullStats.jsx":"9","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonPreview\\PokemonPreview.jsx":"10","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\api\\PokemonSpeciesAPI.js":"11"},{"size":142,"mtime":1645950146744,"results":"12","hashOfConfig":"13"},{"size":111,"mtime":1645950146862,"results":"14","hashOfConfig":"13"},{"size":449,"mtime":1650745849027,"results":"15","hashOfConfig":"16"},{"size":1882,"mtime":1650509323617,"results":"17","hashOfConfig":"16"},{"size":1000,"mtime":1650509707752,"results":"18","hashOfConfig":"16"},{"size":2613,"mtime":1650742344436,"results":"19","hashOfConfig":"16"},{"size":157,"mtime":1648700807243,"results":"20","hashOfConfig":"16"},{"size":630,"mtime":1650141464616,"results":"21","hashOfConfig":"16"},{"size":291,"mtime":1650745712390,"results":"22","hashOfConfig":"16"},{"size":707,"mtime":1650516914122,"results":"23","hashOfConfig":"16"},{"size":754,"mtime":1650742552334,"results":"24","hashOfConfig":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1unronf",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zoz57n",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\01_React_project_template\\src\\index.js",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\01_React_project_template\\src\\App.js",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\index.js",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\App.js",[],["51","52"],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\api\\PokemonAPI.js",["53"],"import React, { useEffect, useState } from \"react\";\r\nimport PokemonList from \"../Components/PokemonList/PokemonList\";\r\n\r\nconst PokemonAPI = (props) => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  //fetch pokemon api\r\n  const getData = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon?limit=${props.limit}`\r\n      );\r\n      let data = await response.json();\r\n\r\n      //Parse over api url to get pokemon information\r\n      const pokemonData = [];\r\n      for (let i = 0; i < data.results.length; i++) {\r\n        let res = await fetch(data.results[i].url);\r\n        let secondData = await res.json();\r\n        pokemonData.push(secondData);\r\n      }\r\n      setData(pokemonData);\r\n    } catch {\r\n      console.error(\"Api was not able to be found\");\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <PokemonList pokemonData={data} />\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PokemonAPI;\r\n","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonList\\PokemonList.jsx",["54","55"],"import React, { useEffect, useState } from \"react\";\r\nimport PokemonPreview from \"../PokemonPreview/PokemonPreview\";\r\nimport Card from \"../../UI/Card/Card\";\r\nimport styles from \"./PokemonList.module.css\";\r\nimport PokemonFilterList from \"./PokemonListFilter\";\r\nimport PokemonSpeciesAPI from \"../../api/PokemonSpeciesAPI\";\r\n\r\n//default data for preview\r\nconst defaultPreview = {\r\n  name: \"Bulbasaur\",\r\n  id: 1,\r\n  image:\r\n    \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/1.png\",\r\n};\r\nconst PokemonList = (props) => {\r\n  const [previewData, setPreviewData] = useState(defaultPreview);\r\n  const [stats, setStats] = useState({});\r\n  const [loadStats, setLoadStatus] = useState(false);\r\n  const [filterList, setFilterList] = useState([]);\r\n  useEffect(() => {\r\n    setFilterList(props.pokemonData);\r\n    setStats(props.pokemonData[0]);\r\n  }, [props]);\r\n  const previewHandler = (data) => {\r\n    setPreviewData({\r\n      id: data.id,\r\n      name: data.name,\r\n      image: data.sprites.other[\"official-artwork\"].front_default,\r\n    });\r\n    setStats(data);\r\n  };\r\n  const filterListHandler = (criteria) => {\r\n    if (criteria != \"\") {\r\n      const filterPokemonList = props.pokemonData.filter((pokemon) => {\r\n        if (pokemon.name.includes(criteria)) {\r\n          return pokemon;\r\n        }\r\n      });\r\n      setFilterList(filterPokemonList);\r\n    } else {\r\n      setFilterList(props.pokemonData);\r\n    }\r\n  };\r\n  const pokemonList = filterList.map((pokemon) => {\r\n    return (\r\n      <li\r\n        className={styles.items}\r\n        key={pokemon.id}\r\n        onClick={() => previewHandler(pokemon)}\r\n      >\r\n        <div className={styles.liId}>{pokemon.id}</div>\r\n        <div className={styles.liName}>{pokemon.name}</div>\r\n        <div>\r\n          <img src={pokemon.sprites.front_default} alt=\"pokemon sprite\" />\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const sideList = () => {\r\n    return (\r\n      <div className={styles.listContainer}>\r\n        <ul className={styles.listUls}>\r\n          <div className={styles.liContainer}>{pokemonList}</div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <PokemonFilterList filterCriteria={filterListHandler} />\r\n      <div className={styles.previewContainer}>\r\n        <PokemonPreview previewInfo={previewData} />\r\n        <button onClick={() => setLoadStatus(true)}>Load Stats</button>\r\n      </div>\r\n      {!loadStats ? (\r\n        <PokemonSpeciesAPI fullStatus={stats} id={previewData.id} />\r\n      ) : (\r\n        sideList()\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\nexport default PokemonList;\r\n","C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\UI\\Card\\Card.js",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonList\\PokemonListFilter.jsx",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonFullStats\\PokemonFullStats.jsx",["56","57"],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\Components\\PokemonPreview\\PokemonPreview.jsx",[],"C:\\Users\\mendo\\OneDrive\\Documents\\Programming\\ReactJS\\Pokedex_App\\project_folder\\src\\api\\PokemonSpeciesAPI.js",["58"],"import React, { useEffect, useState } from \"react\";\r\nimport PokemonFullStatus from \"../Components/PokemonFullStats/PokemonFullStats\";\r\nconst PokemonSpeciesAPI = (props) => {\r\n  const [api, setApi] = useState([]);\r\n  useEffect(() => {\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const fetchApi = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        `https://pokeapi.co/api/v2/pokemon-species/${props.id}/`\r\n      );\r\n      let data = await response.json();\r\n      setApi(data);\r\n    } catch {\r\n      console.error(\"Unable to fetch Pokemon Species Api\");\r\n    }\r\n  };\r\n  console.log(props.fullStatus);\r\n  console.log(api);\r\n  return (\r\n    <div>\r\n      <PokemonFullStatus speciesData={api} />\r\n    </div>\r\n  );\r\n};\r\nexport default PokemonSpeciesAPI;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":8,"column":6,"nodeType":"65","endLine":8,"endColumn":8,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":33,"column":18,"nodeType":"69","messageId":"70","endLine":33,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":34,"column":68,"nodeType":"73","messageId":"74","endLine":34,"endColumn":70},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"80","line":7,"column":6,"nodeType":"65","endLine":7,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["84"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [getData]",{"range":"90","text":"91"},"Update the dependencies array to be: [fetchApi]",{"range":"92","text":"93"},[237,239],"[getData]",[257,259],"[fetchApi]"]